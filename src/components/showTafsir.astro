---

---

<div class="p-5 m-5 min-h-28 rounded-md shadow-md bg-grey-300 flex text-white">
  <p class="flex-1" id="tafsirText">
    Select surah and ayat number first then select the tafsir. Then tafsir will
    show here.
  </p>
  <div class="text-purple-300 m-2 flex w-5 lg:w-8" onclick="copyTafsir()">
    <!-- //copy icon  -->
    <svg
      id="copyIcon"
      xmlns="http://www.w3.org/2000/svg"
      width="25"
      height="25"
      viewBox="0 0 16 16"
      ><path
        fill="currentColor"
        fill-rule="evenodd"
        d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z"
      ></path></svg
    >
    <!-- hidden copy icon  -->

    <svg
      id="hiddenCopyIcon"
      class="hidden"
      xmlns="http://www.w3.org/2000/svg"
      width="30"
      height="30"
      viewBox="0 0 24 24"
      ><path
        fill="currentColor"
        d="M19 3h-4.18C14.4 1.84 13.3 1 12 1s-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m-7 0c.55 0 1 .45 1 1s-.45 1-1 1s-1-.45-1-1s.45-1 1-1m-2 14l-4-4l1.41-1.41L10 14.17l6.59-6.59L18 9z"
      ></path></svg
    >
  </div>
</div>

<script is:inline>
  function copyText(text, onSuccess, onError) {
    // Modern Async Clipboard API
    if (navigator.clipboard) {
      navigator.clipboard
        .writeText(text)
        .then(() => {
          console.log("Text successfully copied to clipboard!");
          if (onSuccess) onSuccess(); // Call success callback
        })
        .catch((err) => {
          console.error("Error copying text to clipboard:", err);
          if (onError) onError(); // Call error callback
        });
    } else {
      // Fallback for older browsers
      let textArea = document.createElement("textarea");
      textArea.value = text;
      // Hide the textarea element
      textArea.style.position = "fixed";
      textArea.style.top = "0";
      textArea.style.left = "0";
      textArea.style.opacity = "0";
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();
      try {
        let successful = document.execCommand("copy");
        let msg = successful ? "successful" : "unsuccessful";
        console.log("Fallback: Copying text command was " + msg);
        if (successful) {
          if (onSuccess) onSuccess(); // Call success callback
        } else {
          if (onError) onError(); // Call error callback
        }
      } catch (err) {
        console.error("Fallback: Oops, unable to copy", err);
        if (onError) onError(); // Call error callback
      }
      document.body.removeChild(textArea);
    }
  }

  async function changeIcon() {
    document.getElementById("copyIcon").classList.add("hidden");
    document.getElementById("hiddenCopyIcon").classList.remove("hidden");
    await new Promise((resolve) => setTimeout(resolve, 800));
    document.getElementById("copyIcon").classList.remove("hidden");
    document.getElementById("hiddenCopyIcon").classList.add("hidden");
  }

  async function copyTafsir() {
    let text = document.getElementById("tafsirText").innerText;
    copyText(
      text,
      () => {
        changeIcon();
      },
      () => {
        alert("something went wrong while copying check the console"); // Error case
      }
    );
  }
</script>
